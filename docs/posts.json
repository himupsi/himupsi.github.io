{
	"createDate": "202102080206",
	"categoriesTags": {
		"개발": [
			"Github",
			"Github Page",
			"marked.js",
			"highlight.js",
			"Disqus",
			"Vue.js",
			"Github SSH"
		],
		"생각": [
			"새해 결심"
		],
		"일상": [
			"코딩테스트",
			"프로그래머스"
		],
		"all": [
			"Github",
			"Github Page",
			"marked.js",
			"highlight.js",
			"Disqus",
			"Vue.js",
			"Github SSH",
			"새해 결심",
			"코딩테스트",
			"프로그래머스"
		]
	},
	"posts": [
		{
			"title": "GitHub Page 만들기 - hello world",
			"summary": "시작이 반. hello world 페이지 만들기",
			"thumbnail": "github_logo.jpg",
			"createDate": 202012230900,
			"category": "개발",
			"tags": [
				"Github",
				"Github Page"
			],
			"id": "2020_12_23_github_page",
			"name": "2020_12_23_github_page.md",
			"md": "## Github page\n\nGithub repository 를 이용하여 개인 홈페이지 또는 블로그를 만들수 있다. 공식적으로 [Github page]((https://pages.github.com/))라는 이름으로 서비스하고 있다.\n백엔드는 사용할 수 없기때문에 정적 웹 페이지(Static web page)로 만들어야 한다.\n\n* 참고로 보통 아래 두개의 번들?을 이용해 블로그를 만듷어 사용하는 것 같다. 둘다 테마도 지원하고 npm 또는 gem 명령으로 쉽게 설치가 가능하다.\n    * [Jekyll](https://jekyllrb.com/): Github page에서 언급하고 있다. rubygems 명령을 이용해야되서 조금 불편하다.\n    * [Hexo](https://hexo.io/docs/github-pages): 사용해보지는 않았지만 npm 명령만으로 설치가 끝나는거 같다.\n\n## hello world 페이지 만들기\n\n1. GitHub에 레파지토리를 만든다.\n    * 레파지토리 이름: `{사용자ID}.github.io`\n1. index.html 을 만들고 커밋하고 푸쉬한다.\n    * 간단히 아래 처럼 hello world만 입력하고 커밋한다.\n        ```\n            hello world\n        ```\n1. `https://{사용자ID}.github.io/` 에 접속하고 확인해본다.\n    * 푸쉬 후 바로 적용되지는 않는다. 푸시하고 좀 기다려야한다.(10초?)\n\n1. Github의 repository 설정을 통해 경로와 branch를 설정할 수 있다.\n\n    ![스크린샷](/images/20201223_1_1.png)"
		},
		{
			"title": "marked.js 코드 블록 하이라이트 시키기",
			"thumbnail": "marked_highlight.png",
			"summary": "marked.js 에 highlight.js 적용하기",
			"createDate": 202012231100,
			"category": "개발",
			"tags": [
				"marked.js",
				"highlight.js"
			],
			"id": "2020_12_23_marked_highlight",
			"name": "2020_12_23_marked_highlight.md",
			"md": "# marked.js 에 코드 블록 하이라이트\n\n[marked](https://marked.js.org/)로 파싱한 마크다운에서 코드 블록이 심심하게 표시된다. 검색해보니 [highlight.js](https://highlightjs.org/) 를 적용할 수 있다고 한다.\n\n* 적용하기\n\n    ``` javascript\n    import marked from \"marked\";\n    import hljs from 'highlight.js';\n    import 'highlight.js/styles/atom-one-dark-reasonable.css';\n\n    marked.setOptions({\n        highlight: function(code, lang) {\n            // lang 값이 없을 경우 highlight 함수에서 에러가 발생한다.\n            return lang !== '' ? hljs.highlight(lang, code).value : code;\n        }\n    });\n    ```\n\n* 코드 테마 미리보기\n    * https://highlightjs.org/static/demo/ 여기를 참고\n    * css 파일은 `/node_modules/highlight.js/styles` 안에 들어있다. 테마 이름과 거의 비슷한 이름으로 css파일이 존재한다. css 파일 이름을 확인하고 import 하면 된다.\n    * 이상하게 백그라운드 색은 적용이 안되는 것 같다.. 보기 나쁘지 않으므로 그냥 사용한다.\n\n* 참고\n    * https://stackoverflow.com/questions/48843806/how-to-use-npm-marked-with-highlightjs"
		},
		{
			"title": "블로그에 소셜 댓글 기능 추가하기",
			"thumbnail": "disqus_logo.png",
			"summary": "Disqus를 이용해 댓글 기능 추가하기(Vue.js에서 적용하기)",
			"createDate": 202012231330,
			"category": "개발",
			"tags": [
				"Disqus",
				"Vue.js"
			],
			"id": "2020_12_23_social_reply",
			"name": "2020_12_23_social_reply.md",
			"md": "고맙게도 무료로 댓글을 사용할수 있게 해주는 [Disqus](https://disqus.com/) 가 있다. \n\n적용하는 절차는 다음과 같다.\n\n1. Disqus에 가입한다.\n\n1. 가입하고 화면의 `GET STARTED`를 누른다.\n\n    ![스크린샷](/images/20201223_2_1.png?raw=true)\n\n1. `I want to install diqus on my site`를 선택한다.\n\n    ![스크린샷](/images/20201223_2_2.png?raw=true)\n\n1. 사이트 정보를 입력하고 `Create Site`를 누른다.\n\n    ![스크린샷](/images/20201223_2_3.png?raw=true)\n\n1. 그냥 무료인 `Basic`를 선택한다.\n\n    ![스크린샷](/images/20201223_2_4.png?raw=true)\n\n1. 블로그를 어떤 걸로 구축했는지에 따라 선택하면 된다. 이 블로그는 vue.js기반으로 만들고 있기 때문에 맨아래 `Universal code`를 선택했다.\n\n    ![스크린샷](/images/20201223_2_5.png?raw=true)\n\n1. `Universal code`를 선택하면 아래와 같은 코드가 생성된다.\n\n    ![스크린샷](/images/20201223_2_6.png?raw=true)\n\n* VueJs 에서 적용하는 방법 아래를 참고!\n\n    ```html\n    <template>\n        <div id=\"disqus_thread\"></div>\n    <template>\n    ```\n    ```javascript\n    <script>\n    export default {\n        mounted: function ()\n            var disqus_config = function () {\n\n            // Replace PAGE_URL with your page's canonical URL variable\n            this.page.url = (window.location.host + window.location.pathname);\n            // Replace PAGE_IDENTIFIER with your page's unique identifier variable\n            this.page.identifier = this.$route.params.postid;\n\n            };\n\n            (function() { // DON'T EDIT BELOW THIS LINE\n            var d = document, s = d.createElement('script');\n            s.src = 'https://himupsi-github.disqus.com/embed.js';\n            s.setAttribute('data-timestamp', +new Date());\n            (d.head || d.body).appendChild(s);\n            })();\n        }\n    }\n    </script>\n    ```"
		},
		{
			"title": "Github SSH key 로 접속하기",
			"summary": "SSH key를 이용해 Github Desktop을 사용하지 않고 CLI에서 커밋하고 푸시하기.",
			"thumbnail": "github_logo.jpg",
			"createDate": 202101120100,
			"category": "개발",
			"tags": [
				"Github SSH"
			],
			"id": "2021_01_12_connecting_to_github_with_ssh",
			"name": "2021_01_12_connecting_to_github_with_ssh.md",
			"md": "# Github SSH key로 접속하기\n\n보통은  Github Desktop을 이용해 Github를 이용하지만 [Azure DevOps](https://azure.microsoft.com/ko-kr/services/devops/) 의 pipeline에서 Github에 접근하기 위해 SSH key를 사용했다.\n\nSSH key 생성 및 등록 방법은 Github에 잘 설명되어 있어 링크로 대체한다.\n1. 먼저 SSH key를 생성한다.\n    * https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent\n    * **참고**\n        * SSH 접속시 터미널 로그를 보니 `> Permission denied (publickey).` 가 발생해서 한참을 삽질했는데 key 생성시 passphrase를 사용해서 일어난 문제였다.\n        * pipeline(외부 linux 환경)에서 키파일의 passphrase를 쉡스크립트에 넣기도 이상해서 그냥 passphrase 없는 key를 사용하는게...(나는 그렇게 사용하기로 결정했다.)\n\n1. 생성된 key 파일 중 공개키를 Github에 등록한다.\n    * https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/adding-a-new-ssh-key-to-your-github-account\n1. SSH key로 접속하기\n    * 생성된 private key 권한을 수정하고 known_hosts에 등록한다.\n        ```zsh\n        chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa\n        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts\n        ```\n    * git 설정하기\n        ```zsh\n        git config --local user.name \"깃허브ID\"\n        git config --local user.email \"이메일\"\n        ```\n    * Push 예시*\n        ```zsh\n        chmod 700 ~/.ssh && chmod 600 ~/.ssh/id_rsa\n        ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts\n        git config --local user.name \"깃허브ID\"\n        git config --local user.email \"이메일\"\n        git add .\n        git commit -m \"커밋 메세지\"\n        git remote set-url --push origin git@github.com:깃허브ID/레포지토리이름.git\n        git push origin HEAD:master\n        ```\n1. 테스트\n    * https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/error-permission-denied-publickey\n\n\n* 절차는 아래에 잘나와있다.\n    * https://docs.github.com/en/free-pro-team@latest/github/authenticating-to-github/connecting-to-github-with-ssh"
		},
		{
			"title": "2020년을 돌아보며 + 새해 결심",
			"thumbnail": "scream.jpg",
			"summary": "코로나 끝나라. 2021년 잘 살아보자.",
			"createDate": 202101150010,
			"category": "생각",
			"tags": [
				"새해 결심"
			],
			"id": "2021_01_15_new_year",
			"name": "2021_01_15_new_year.md",
			"md": "# 2020년 생긴일\n\n### 프리랜서\n\n이전 회사를 퇴사하는 시점에 딸(모모)가 생기면서 빨리 일자리를 구해야겠다는 생각에 아는 분 소개로 프리랜서를 시작했다. 선거관리위원회에서 일하게 되었는데 JSP, XPlatform을 개발을 경험해 볼수 있었다.\n선거철을 잘 버티면 비교적 편한 업무 환경이다. 재계약할 수 있었지만 내가 성장하길 원했던 방향과 달라 1년 2개월로 프리랜서 생활을 끝내기로 했다. 좋은 사람과 같이 못하게 된 것은 아쉽지만..\n\n### 코로나\n\n2020년 초부터 코로나가 발생하기 시작하면서 내 삶에도 많은 변화가 찾아왔다. 외출시 마스크가 당연시 되고 대중교통 이용을 꺼려하게 되었고 친구들과는 카톡으로만 안부를 주고 받으며 가족 친지를 자주 뵙지도 못하게 되었다.\n일상적인 것들이 소중함을 느낀다. 지긋지긋한 코로나가 빨리 끝났으면 좋겠다..\n\n### 이사\n\n딸이 태어나기 전에 이사를 서둘러 했다. 짐이 많지 않은 걸로 생각해서 이삿짐 센터를 부르지 않아 와이프가 고생을 많이 했다. 와이프한테 미안하다.(담부턴 꼭 이삿짐 센터를 이용하자.)\n\n### 딸(모모) 태어남\n\n5월 4일 딸이 태어났다. 너무 예쁘고 귀엽다. 열심히 살아야 겠다.\n\n### 집값 폭등, 주식 시장 과열\n\n내집 마련의 꿈이 점점 멀어져 가는 것을 느끼는 한 해였다. 월급만으로 집을 살 수 없는 시대가 온 것 같다.\n어느 순간부터 너도 나도 주식을 이야기하며 투자하는게 당연한 분위기가 되었다. 코로나 때문인건가...\n\n# 새해 결심\n\n### 개발 블로그 포스팅\n\n일단 블로그 개발은 어느 정도 마무리되었다. 이제 운영을 잘해보자. 글쓰기 연습도 할겸..\n\n### 새 일자리\n\n지금은 백수다... 좋은 직장에 들어가자.\n\n### 수입 늘리기\n\n나는 자본주의 체제에 살고 있다. 자본가가 되고 싶다. 아직 방법은 잘 모르겠다.\n\n# 끝으로\n\n2020년은 힘들다면 힘들었던 한해였던 것 같다. 내 딸 정원이가 태어난 해이기도 하다. 2021년에는 다시 코로나 이전의 모습으로 돌아갔으면 좋겠다.\n캠핑도 다니고 싶고 친구들을 만나 수다도 떨고 싶다."
		},
		{
			"title": "프로그래머스 챌린지 후기 - 카카오 커머스",
			"summary": "카카오커머스 개발자 영입 - 프론트엔드 개발 챌린지 에 참여해주셔서 감사합니다.",
			"thumbnail": "programmers_challenge.png",
			"createDate": 202102081000,
			"category": "일상",
			"tags": [
				"코딩테스트",
				"프로그래머스"
			],
			"id": "2021_02_08_programmers_challenge",
			"name": "2021_02_08_programmers_challenge.md",
			"md": "# 프로그래머스 카카오 커머스 챌린지 후기\n\n\n### 1차 코딩 테스트\n\n![스크린샷](/images/20210208_1_1.png?raw=true)\n\n**결과: 합격**\n\n3문제 중 2문제 풀고 1문제는 효율성 테스트에서 실패...\n\n코딩테스트 경험이 거의 없어서 [프로그래머스 연습문제](https://programmers.co.kr/learn/challenges?tab=algorithm_practice_kit)를 풀면서 준비했다.  \n일부 문제만 풀어봤지만 다른 사람 풀이를 보는게 많이 도움이 되었던거 같다. 당연한 이야기 이지만 문제를 잘읽는 게 중요한 것 같다.  \n실패한 문제의 실패 원인이 시험이 끝난후에야 방법이 떠올랐다... 붙어서 다행었지만 머리가 굳어서 인지 머리가 빨리 빨리 안돌아간다.  \n회사를 다니다 보면 생각보다 머리쓸 일이 없다. 심심할때 코딩 문제를 풀어보는게 두뇌 회전에 좋을것 같다.(쉬기 바빠서 잘 안할것 같지만...)  \n\n```\n여담이지만 합격 메일이 아래 제목으로 와서 떨어진 줄 알았다...\n```\n\n### 2차 과제 테스트\n\n**결과: 불합격(예정)**\n\nVanila JS(순수 자바스크립트)에 익숙해야할 필요가 있다. 코드 구조를 잡으려다 실패해서 필수을 모두 구현하지 못하고 끝냈다...  \n준비가 부족한 탓... 평소에 Vanila js로 뭐라도 만들어 볼 걸이라는 후회가 든다.  \n모듈로 코드 구조를 잡으려다 실패했는데.. 시험 중이라 정확한 원인을 못찾았는데 Javascript에 대한 이해가 부족한 탓인거 같다.(왜 자꾸 js 파일을 html 처럼 인식했는지 이해가 안간다..)\n\n### 반성\n\n1. 평소 머리를 쓸려고 노력하자.\n1. 개발을 꾸준히 하자.\n1. javascript 공부도 꾸준히 하자.(프레임워크는 결국 버려진다...)"
		}
	]
}